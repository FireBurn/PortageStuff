diff --git a/src/microsoft/vulkan/dzn_descriptor_set.c b/src/microsoft/vulkan/dzn_descriptor_set.c
index fe7b7b212c4..96da02414ca 100644
--- a/src/microsoft/vulkan/dzn_descriptor_set.c
+++ b/src/microsoft/vulkan/dzn_descriptor_set.c
@@ -645,7 +645,10 @@ dzn_pipeline_layout_create(struct dzn_device *device,
    D3D12_ROOT_PARAMETER1 root_params[MAX_ROOT_PARAMS] = { 0 };
    D3D12_DESCRIPTOR_RANGE1 *range_ptr = ranges;
    D3D12_ROOT_PARAMETER1 *root_param;
+
+#ifndef NDEBUG
    uint32_t root_dwords = 0;
+#endif
 
    for (uint32_t i = 0; i < MAX_SHADER_VISIBILITIES; i++) {
       dzn_foreach_pool_type (type) {
@@ -672,7 +675,9 @@ dzn_pipeline_layout_create(struct dzn_device *device,
 
          if (root_param->DescriptorTable.NumDescriptorRanges) {
             layout->root.type[layout->root.param_count++] = (D3D12_DESCRIPTOR_HEAP_TYPE)type;
+#ifndef NDEBUG
             root_dwords++;
+#endif
          }
       }
    }
@@ -690,7 +695,9 @@ dzn_pipeline_layout_create(struct dzn_device *device,
                          sizeof(struct dxil_spirv_compute_runtime_data)),
                     4);
    root_param->ShaderVisibility = D3D12_SHADER_VISIBILITY_ALL;
+#ifndef NDEBUG
    root_dwords += root_param->Constants.Num32BitValues;
+#endif
 
    D3D12_STATIC_SAMPLER_DESC *static_sampler_ptr = static_sampler_descs;
    for (uint32_t j = 0; j < pCreateInfo->setLayoutCount; j++) {
@@ -722,7 +729,9 @@ dzn_pipeline_layout_create(struct dzn_device *device,
       root_param->Constants.Num32BitValues = ALIGN(push_constant_size, 4) / 4;
       root_param->Constants.RegisterSpace = DZN_REGISTER_SPACE_PUSH_CONSTANT;
       root_param->ShaderVisibility = translate_desc_visibility(push_constant_flags);
+#ifndef NDEBUG
       root_dwords += root_param->Constants.Num32BitValues;
+#endif
    }
 
    assert(layout->root.param_count <= ARRAY_SIZE(root_params));
