From 46a618c3612d75f79652c85e89d53e45753c8808 Mon Sep 17 00:00:00 2001
From: Rob Clark <robdclark@chromium.org>
Date: Wed, 24 May 2023 10:03:24 -0700
Subject: [PATCH] gbm: Allow GBM allocation of YUV surfaces

YUV surfaces may potentially not be renderable by the GPU itself, but
they can be sampled from the GPU, and exported to other devices such as
video decoder which can render into them.

This is required by chrome/chromium v4l2 based video decode stack.  In
the context of ChromeOS, minigbm allows for allocating YUV gbm BOs.
This brings parity to minigbm, so that the v4l2 codec stack can also be
used on linux.

Suggested-by: https://gitlab.freedesktop.org/mesa/mesa/-/issues/7745
Closes: https://gitlab.freedesktop.org/mesa/mesa/-/issues/9079
Signed-off-by: Rob Clark <robdclark@chromium.org>
---
 src/egl/drivers/dri2/platform_drm.c |  6 +++
 src/gbm/backends/dri/gbm_dri.c      | 76 +++++++++++++++++++++++++++++
 src/gbm/backends/dri/gbm_driint.h   |  1 +
 3 files changed, 83 insertions(+)

diff --git a/src/egl/drivers/dri2/platform_drm.c b/src/egl/drivers/dri2/platform_drm.c
index 9bb7ea4b950..da33c72b735 100644
--- a/src/egl/drivers/dri2/platform_drm.c
+++ b/src/egl/drivers/dri2/platform_drm.c
@@ -116,6 +116,9 @@ dri2_drm_config_is_compatible(struct dri2_egl_display *dri2_dpy,
          break;
    }
 
+   if (visual->is_yuv)
+      return false;
+
    if (i == dri2_dpy->gbm_dri->num_visuals)
       return false;
 
@@ -504,6 +507,9 @@ drm_add_configs_for_visuals(_EGLDisplay *disp)
       for (unsigned j = 0; j < num_visuals; j++) {
          struct dri2_egl_config *dri2_conf;
 
+         if (visuals[j].is_yuv)
+            continue;
+
          if (visuals[j].dri_image_format != gl_config->color_format)
             continue;
 
diff --git a/src/gbm/backends/dri/gbm_dri.c b/src/gbm/backends/dri/gbm_dri.c
index 2be7ed2fb68..b687ec4f2a5 100644
--- a/src/gbm/backends/dri/gbm_dri.c
+++ b/src/gbm/backends/dri/gbm_dri.c
@@ -319,6 +319,82 @@ static const struct gbm_dri_visual gbm_dri_visuals_table[] = {
    { GBM_FORMAT_ABGR16161616, __DRI_IMAGE_FORMAT_ABGR16161616 },
    { GBM_FORMAT_XBGR16161616F, __DRI_IMAGE_FORMAT_XBGR16161616F },
    { GBM_FORMAT_ABGR16161616F, __DRI_IMAGE_FORMAT_ABGR16161616F },
+   {
+     GBM_FORMAT_YUYV, __DRI_IMAGE_FORMAT_NONE,
+     .is_yuv = true,
+   },
+   {
+     GBM_FORMAT_YVYU, __DRI_IMAGE_FORMAT_NONE,
+     .is_yuv = true,
+   },
+   {
+     GBM_FORMAT_UYVY, __DRI_IMAGE_FORMAT_NONE,
+     .is_yuv = true,
+   },
+   {
+     GBM_FORMAT_VYUY, __DRI_IMAGE_FORMAT_NONE,
+     .is_yuv = true,
+   },
+   {
+     GBM_FORMAT_AYUV, __DRI_IMAGE_FORMAT_NONE,
+     .is_yuv = true,
+   },
+   {
+     GBM_FORMAT_NV12, __DRI_IMAGE_FORMAT_NONE,
+     .is_yuv = true,
+   },
+   {
+     GBM_FORMAT_NV21, __DRI_IMAGE_FORMAT_NONE,
+     .is_yuv = true,
+   },
+   {
+     GBM_FORMAT_NV16, __DRI_IMAGE_FORMAT_NONE,
+     .is_yuv = true,
+   },
+   {
+     GBM_FORMAT_NV61, __DRI_IMAGE_FORMAT_NONE,
+     .is_yuv = true,
+   },
+   {
+     GBM_FORMAT_YUV410, __DRI_IMAGE_FORMAT_NONE,
+     .is_yuv = true,
+   },
+   {
+     GBM_FORMAT_YVU410, __DRI_IMAGE_FORMAT_NONE,
+     .is_yuv = true,
+   },
+   {
+     GBM_FORMAT_YUV411, __DRI_IMAGE_FORMAT_NONE,
+     .is_yuv = true,
+   },
+   {
+     GBM_FORMAT_YVU411, __DRI_IMAGE_FORMAT_NONE,
+     .is_yuv = true,
+   },
+   {
+     GBM_FORMAT_YUV420, __DRI_IMAGE_FORMAT_NONE,
+     .is_yuv = true,
+   },
+   {
+     GBM_FORMAT_YVU420, __DRI_IMAGE_FORMAT_NONE,
+     .is_yuv = true,
+   },
+   {
+     GBM_FORMAT_YUV422, __DRI_IMAGE_FORMAT_NONE,
+     .is_yuv = true,
+   },
+   {
+     GBM_FORMAT_YVU422, __DRI_IMAGE_FORMAT_NONE,
+     .is_yuv = true,
+   },
+   {
+     GBM_FORMAT_YUV444, __DRI_IMAGE_FORMAT_NONE,
+     .is_yuv = true,
+   },
+   {
+     GBM_FORMAT_YVU444, __DRI_IMAGE_FORMAT_NONE,
+     .is_yuv = true,
+   },
 };
 
 static int
diff --git a/src/gbm/backends/dri/gbm_driint.h b/src/gbm/backends/dri/gbm_driint.h
index 4ae29114426..7ad989ff101 100644
--- a/src/gbm/backends/dri/gbm_driint.h
+++ b/src/gbm/backends/dri/gbm_driint.h
@@ -44,6 +44,7 @@ struct gbm_dri_bo;
 struct gbm_dri_visual {
    uint32_t gbm_format;
    int dri_image_format;
+   bool is_yuv;
 };
 
 struct gbm_dri_device {
-- 
2.46.0

