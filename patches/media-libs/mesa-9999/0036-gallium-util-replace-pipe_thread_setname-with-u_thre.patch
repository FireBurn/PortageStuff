From 9a8c05fc1c92f829e0d13103b199b4ed26972ad4 Mon Sep 17 00:00:00 2001
From: Timothy Arceri <tarceri@itsqueeze.com>
Date: Thu, 9 Mar 2017 10:09:58 +1100
Subject: [PATCH 36/36] gallium/util: replace pipe_thread_setname() with
 u_thread_setname()

They do the same thing we are just moving the function to be
accessible to all of Mesa.
---
 src/gallium/auxiliary/os/os_thread.h         | 12 ------------
 src/gallium/drivers/llvmpipe/lp_rast.c       |  2 +-
 src/gallium/state_trackers/nine/nine_state.c |  4 ++--
 3 files changed, 3 insertions(+), 15 deletions(-)

diff --git a/src/gallium/auxiliary/os/os_thread.h b/src/gallium/auxiliary/os/os_thread.h
index ecd8f8a5e9..b6e0698da6 100644
--- a/src/gallium/auxiliary/os/os_thread.h
+++ b/src/gallium/auxiliary/os/os_thread.h
@@ -42,18 +42,6 @@
 #include "util/u_thread.h"
 
 
-static inline void pipe_thread_setname( const char *name )
-{
-#if defined(HAVE_PTHREAD)
-#  if defined(__GNU_LIBRARY__) && defined(__GLIBC__) && defined(__GLIBC_MINOR__) && \
-      (__GLIBC__ >= 3 || (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 12))
-   pthread_setname_np(pthread_self(), name);
-#  endif
-#endif
-   (void)name;
-}
-
-
 static inline int pipe_thread_is_self( thrd_t thread )
 {
 #if defined(HAVE_PTHREAD)
diff --git a/src/gallium/drivers/llvmpipe/lp_rast.c b/src/gallium/drivers/llvmpipe/lp_rast.c
index d746778e25..b25ade3d2e 100644
--- a/src/gallium/drivers/llvmpipe/lp_rast.c
+++ b/src/gallium/drivers/llvmpipe/lp_rast.c
@@ -791,7 +791,7 @@ thread_function(void *init_data)
    unsigned fpstate;
 
    util_snprintf(thread_name, sizeof thread_name, "llvmpipe-%u", task->thread_index);
-   pipe_thread_setname(thread_name);
+   u_thread_setname(thread_name);
 
    /* Make sure that denorms are treated like zeros. This is 
     * the behavior required by D3D10. OpenGL doesn't care.
diff --git a/src/gallium/state_trackers/nine/nine_state.c b/src/gallium/state_trackers/nine/nine_state.c
index ef33942a62..26c21f29f7 100644
--- a/src/gallium/state_trackers/nine/nine_state.c
+++ b/src/gallium/state_trackers/nine/nine_state.c
@@ -95,7 +95,7 @@ nine_csmt_worker(void *arg)
     struct csmt_instruction *instr;
     DBG("CSMT worker spawned\n");
 
-    pipe_thread_setname("CSMT-Worker");
+    u_thread_setname("CSMT-Worker");
 
     while (1) {
         nine_queue_wait_flush(ctx->pool);
@@ -158,7 +158,7 @@ nine_csmt_create( struct NineDevice9 *This )
     (void) mtx_init(&ctx->thread_resume, mtx_plain);
 
 #if DEBUG
-    pipe_thread_setname("Main thread");
+    u_thread_setname("Main thread");
 #endif
 
     ctx->device = This;
-- 
2.12.0

