From 2bd49b71f2890033ed2a342e7c3c63846efb8ad1 Mon Sep 17 00:00:00 2001
From: Mike Lothian <mike@fireburn.co.uk>
Date: Mon, 6 Dec 2021 18:22:11 +0000
Subject: [PATCH] Revert "KMountPoint: revert to parsing
 /dev/disk/by-{uuid,label}/ manually"

This reverts commit 221a94a66c4d2f6e4f2dc938ee8a63a6ca739477.
---
 CMakeLists.txt                      |  3 ++-
 src/core/CMakeLists.txt             |  5 +++--
 src/core/config-kmountpoint.h.cmake |  2 +-
 src/core/kmountpoint.cpp            | 18 ++++++++++++++----
 4 files changed, 20 insertions(+), 8 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index f1bb1a59..ca374a4c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -130,7 +130,8 @@ set_package_properties(ACL PROPERTIES DESCRIPTION "LibACL"
 # Used by KMountPoint
 if (CMAKE_SYSTEM_NAME MATCHES "Linux")
     find_package(LibMount REQUIRED)
-    set(HAVE_LIB_MOUNT ${LibMount_FOUND})
+    find_package(Blkid REQUIRED)
+    set(HAVE_LIBS_MOUNT_AND_BLKID ${LibMount_FOUND} AND ${Blkid_FOUND})
 endif()
 
 if (ANDROID)
diff --git a/src/core/CMakeLists.txt b/src/core/CMakeLists.txt
index 67a1b1cf..be19e9b6 100644
--- a/src/core/CMakeLists.txt
+++ b/src/core/CMakeLists.txt
@@ -236,8 +236,9 @@ if(ACL_FOUND)
   target_link_libraries(KF5KIOCore PRIVATE ${ACL_LIBS})
 endif()
 
-if(HAVE_LIB_MOUNT)
-  target_link_libraries(KF5KIOCore PRIVATE LibMount::LibMount)
+if(HAVE_LIBS_MOUNT_AND_BLKID)
+  # libmount links against blkid anyway
+  target_link_libraries(KF5KIOCore PRIVATE LibMount::LibMount Blkid::Blkid)
 endif()
 
 # this should be done by cmake, see bug 371721
diff --git a/src/core/config-kmountpoint.h.cmake b/src/core/config-kmountpoint.h.cmake
index 3673eb14..f824d404 100644
--- a/src/core/config-kmountpoint.h.cmake
+++ b/src/core/config-kmountpoint.h.cmake
@@ -1,7 +1,7 @@
 #cmakedefine01 HAVE_GETMNTINFO
 #cmakedefine01 GETMNTINFO_USES_STATVFS
 
-#cmakedefine01 HAVE_LIB_MOUNT
+#cmakedefine01 HAVE_LIBS_MOUNT_AND_BLKID
 
 #cmakedefine01 HAVE_SYS_MOUNT_H
 #cmakedefine01 HAVE_FSTAB_H
diff --git a/src/core/kmountpoint.cpp b/src/core/kmountpoint.cpp
index f41cff5e..e2d32055 100644
--- a/src/core/kmountpoint.cpp
+++ b/src/core/kmountpoint.cpp
@@ -44,7 +44,7 @@ static const Qt::CaseSensitivity cs = Qt::CaseSensitive;
 #endif
 
 // Linux
-#if HAVE_LIB_MOUNT
+#if HAVE_LIBS_MOUNT_AND_BLKID
 #include <libmount/libmount.h>
 #include <blkid/blkid.h>
 #endif
@@ -176,7 +176,7 @@ KMountPoint::List KMountPoint::possibleMountPoints(DetailsNeededFlags infoNeeded
 #ifdef Q_OS_WIN
     result = KMountPoint::currentMountPoints(infoNeeded);
 
-#elif HAVE_LIB_MOUNT
+#elif HAVE_LIBS_MOUNT_AND_BLKID
     if (struct libmnt_table *table = mnt_new_table()) {
         // By default parses "/etc/fstab"
         if (mnt_table_parse_fstab(table, nullptr) == 0) {
@@ -202,13 +202,23 @@ KMountPoint::List KMountPoint::possibleMountPoints(DetailsNeededFlags infoNeeded
                 // or some network mount
                 if (const char *source = mnt_fs_get_source(fs)) {
                     mp->d->m_mountedFrom = QFile::decodeName(source);
+                    if (mp->d->m_mountedFrom.startsWith(QLatin1String("UUID")) || mp->d->m_mountedFrom.startsWith(QLatin1String("LABEL"))) {
+                        // Use blkid to resolve UUID/LABEL to the device file
+                        if (char *blkSource = blkid_evaluate_spec(source, nullptr)) {
+                            mp->d->m_mountedFrom = QFile::decodeName(blkSource);
+                            free(blkSource);
+                            if ((infoNeeded & KMountPoint::NeedRealDeviceName) //
+                                && mp->d->m_mountedFrom.startsWith(QLatin1String("/dev/"))) {
+                                mp->d->m_device = mp->d->m_mountedFrom;
+                            }
+                        }
+                    }
                 }
 
                 if (infoNeeded & NeedMountOptions) {
                     mp->d->m_mountOptions = QFile::decodeName(mnt_fs_get_options(fs)).split(QLatin1Char(','));
                 }
 
-                mp->d->finalizePossibleMountPoint(infoNeeded);
                 result.append(mp);
             }
             mnt_free_iter(itr);
@@ -341,7 +351,7 @@ KMountPoint::List KMountPoint::currentMountPoints(DetailsNeededFlags infoNeeded)
         }
     }
 
-#elif HAVE_LIB_MOUNT
+#elif HAVE_LIBS_MOUNT_AND_BLKID
     if (struct libmnt_table *table = mnt_new_table()) {
         // By default, parses "/proc/self/mountinfo"
         if (mnt_table_parse_mtab(table, nullptr) == 0) {
-- 
2.34.1

