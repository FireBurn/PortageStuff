diff --git a/media/mojo/services/gpu_mojo_media_client_cros.cc b/media/mojo/services/gpu_mojo_media_client_cros.cc
index 93b454649df0b..f0c5db9fae204 100644
--- a/media/mojo/services/gpu_mojo_media_client_cros.cc
+++ b/media/mojo/services/gpu_mojo_media_client_cros.cc
@@ -44,10 +44,6 @@ VideoDecoderType GetPreferredLinuxDecoderImplementation(
   if (!base::FeatureList::IsEnabled(kVaapiVideoDecodeLinux))
     return VideoDecoderType::kUnknown;
 
-  // Regardless of vulkan support, if direct video decoder is disabled, revert
-  // to using the VDA implementation.
-  if (!base::FeatureList::IsEnabled(kUseChromeOSDirectVideoDecoder))
-    return VideoDecoderType::kVda;
   return VideoDecoderType::kVaapi;
 }
 
@@ -73,6 +69,7 @@ VideoDecoderType GetActualPlatformDecoderImplementation(
         return VideoDecoderType::kUnknown;
       if (gpu_info.vulkan_info->physical_devices.empty())
         return VideoDecoderType::kUnknown;
+      constexpr int kAMD = 0x1022;
       constexpr int kIntel = 0x8086;
       const auto& device = gpu_info.vulkan_info->physical_devices[0];
       switch (device.properties.vendorID) {
@@ -81,9 +78,11 @@ VideoDecoderType GetActualPlatformDecoderImplementation(
             return VideoDecoderType::kUnknown;
           return VideoDecoderType::kVaapi;
         }
+        case kAMD:
+          return VideoDecoderType::kVaapi;
         default: {
           // NVIDIA drivers have a broken implementation of most va_* methods,
-          // ARM & AMD aren't tested yet, and ImgTec/Qualcomm don't have a vaapi
+          // ARM isn't tested yet, and ImgTec/Qualcomm don't have a vaapi
           // driver.
           return VideoDecoderType::kUnknown;
         }
